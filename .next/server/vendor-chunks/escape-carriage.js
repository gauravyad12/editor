/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/escape-carriage";
exports.ids = ["vendor-chunks/escape-carriage"];
exports.modules = {

/***/ "(ssr)/./node_modules/escape-carriage/index.js":
/*!***********************************************!*\
  !*** ./node_modules/escape-carriage/index.js ***!
  \***********************************************/
/***/ ((module) => {

eval("/**\n * Escape carrigage returns like a terminal\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturn(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n  while (/\\r./.test(txt)) {\n    txt = txt.replace(/^([^\\r\\n]*)\\r+([^\\r\\n]+)/gm, function (_, base, insert) {\n      return insert + base.slice(insert.length);\n    });\n  }\n  return txt;\n}\n\nfunction findLongestString(arr) {\n  var longest = 0;\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[longest].length <= arr[i].length) {\n      longest = i;\n    }\n  }\n  return longest;\n}\n\nfunction escapeSingleLineSafe(txt) {\n  if (!/\\r/.test(txt)) return txt;\n  var arr = txt.split(\"\\r\");\n  var res = [];\n\n  while (arr.length > 0) {\n    var longest = findLongestString(arr);\n    res.push(arr[longest]);\n    arr = arr.slice(longest + 1);\n  }\n\n  return res.join(\"\\r\");\n}\n\n/**\n * Safely escape carrigage returns like a terminal.\n * This allows to escape carrigage returns while allowing future output to be appended\n * without loosing information.\n * Use this as a intermediate escape step if your stream hasn't completed yet.\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturnSafe(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  if (!/\\n/.test(txt)) return escapeSingleLineSafe(txt);\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n  var idx = txt.lastIndexOf(\"\\n\");\n\n  return (\n    escapeCarriageReturn(txt.slice(0, idx)) +\n    \"\\n\" +\n    escapeSingleLineSafe(txt.slice(idx + 1))\n  );\n}\n\nmodule.exports = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturn = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturnSafe = escapeCarriageReturnSafe;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXNjYXBlLWNhcnJpYWdlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWSxXQUFXO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixnQkFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVksV0FBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1DQUFtQztBQUNuQyx1Q0FBdUMiLCJzb3VyY2VzIjpbIi9ob21lL3Byb2plY3Qvbm9kZV9tb2R1bGVzL2VzY2FwZS1jYXJyaWFnZS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEVzY2FwZSBjYXJyaWdhZ2UgcmV0dXJucyBsaWtlIGEgdGVybWluYWxcbiAqIEBwYXJhbSB7c3RyaW5nfSB0eHQgLSBTdHJpbmcgdG8gZXNjYXBlLlxuICogQHJldHVybiB7c3RyaW5nfSAgICAtIEVzY2FwZWQgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBlc2NhcGVDYXJyaWFnZVJldHVybih0eHQpIHtcbiAgaWYgKCF0eHQpIHJldHVybiBcIlwiO1xuICBpZiAoIS9cXHIvLnRlc3QodHh0KSkgcmV0dXJuIHR4dDtcbiAgdHh0ID0gdHh0LnJlcGxhY2UoL1xccitcXG4vZ20sIFwiXFxuXCIpOyAvLyBcXHIgZm9sbG93ZWQgYnkgXFxuIC0tPiBuZXdsaW5lXG4gIHdoaWxlICgvXFxyLi8udGVzdCh0eHQpKSB7XG4gICAgdHh0ID0gdHh0LnJlcGxhY2UoL14oW15cXHJcXG5dKilcXHIrKFteXFxyXFxuXSspL2dtLCBmdW5jdGlvbiAoXywgYmFzZSwgaW5zZXJ0KSB7XG4gICAgICByZXR1cm4gaW5zZXJ0ICsgYmFzZS5zbGljZShpbnNlcnQubGVuZ3RoKTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gdHh0O1xufVxuXG5mdW5jdGlvbiBmaW5kTG9uZ2VzdFN0cmluZyhhcnIpIHtcbiAgdmFyIGxvbmdlc3QgPSAwO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgIGlmIChhcnJbbG9uZ2VzdF0ubGVuZ3RoIDw9IGFycltpXS5sZW5ndGgpIHtcbiAgICAgIGxvbmdlc3QgPSBpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbG9uZ2VzdDtcbn1cblxuZnVuY3Rpb24gZXNjYXBlU2luZ2xlTGluZVNhZmUodHh0KSB7XG4gIGlmICghL1xcci8udGVzdCh0eHQpKSByZXR1cm4gdHh0O1xuICB2YXIgYXJyID0gdHh0LnNwbGl0KFwiXFxyXCIpO1xuICB2YXIgcmVzID0gW107XG5cbiAgd2hpbGUgKGFyci5sZW5ndGggPiAwKSB7XG4gICAgdmFyIGxvbmdlc3QgPSBmaW5kTG9uZ2VzdFN0cmluZyhhcnIpO1xuICAgIHJlcy5wdXNoKGFycltsb25nZXN0XSk7XG4gICAgYXJyID0gYXJyLnNsaWNlKGxvbmdlc3QgKyAxKTtcbiAgfVxuXG4gIHJldHVybiByZXMuam9pbihcIlxcclwiKTtcbn1cblxuLyoqXG4gKiBTYWZlbHkgZXNjYXBlIGNhcnJpZ2FnZSByZXR1cm5zIGxpa2UgYSB0ZXJtaW5hbC5cbiAqIFRoaXMgYWxsb3dzIHRvIGVzY2FwZSBjYXJyaWdhZ2UgcmV0dXJucyB3aGlsZSBhbGxvd2luZyBmdXR1cmUgb3V0cHV0IHRvIGJlIGFwcGVuZGVkXG4gKiB3aXRob3V0IGxvb3NpbmcgaW5mb3JtYXRpb24uXG4gKiBVc2UgdGhpcyBhcyBhIGludGVybWVkaWF0ZSBlc2NhcGUgc3RlcCBpZiB5b3VyIHN0cmVhbSBoYXNuJ3QgY29tcGxldGVkIHlldC5cbiAqIEBwYXJhbSB7c3RyaW5nfSB0eHQgLSBTdHJpbmcgdG8gZXNjYXBlLlxuICogQHJldHVybiB7c3RyaW5nfSAgICAtIEVzY2FwZWQgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBlc2NhcGVDYXJyaWFnZVJldHVyblNhZmUodHh0KSB7XG4gIGlmICghdHh0KSByZXR1cm4gXCJcIjtcbiAgaWYgKCEvXFxyLy50ZXN0KHR4dCkpIHJldHVybiB0eHQ7XG4gIGlmICghL1xcbi8udGVzdCh0eHQpKSByZXR1cm4gZXNjYXBlU2luZ2xlTGluZVNhZmUodHh0KTtcbiAgdHh0ID0gdHh0LnJlcGxhY2UoL1xccitcXG4vZ20sIFwiXFxuXCIpOyAvLyBcXHIgZm9sbG93ZWQgYnkgXFxuIC0tPiBuZXdsaW5lXG4gIHZhciBpZHggPSB0eHQubGFzdEluZGV4T2YoXCJcXG5cIik7XG5cbiAgcmV0dXJuIChcbiAgICBlc2NhcGVDYXJyaWFnZVJldHVybih0eHQuc2xpY2UoMCwgaWR4KSkgK1xuICAgIFwiXFxuXCIgK1xuICAgIGVzY2FwZVNpbmdsZUxpbmVTYWZlKHR4dC5zbGljZShpZHggKyAxKSlcbiAgKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlc2NhcGVDYXJyaWFnZVJldHVybjtcbm1vZHVsZS5leHBvcnRzLmVzY2FwZUNhcnJpYWdlUmV0dXJuID0gZXNjYXBlQ2FycmlhZ2VSZXR1cm47XG5tb2R1bGUuZXhwb3J0cy5lc2NhcGVDYXJyaWFnZVJldHVyblNhZmUgPSBlc2NhcGVDYXJyaWFnZVJldHVyblNhZmU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/escape-carriage/index.js\n");

/***/ })

};
;